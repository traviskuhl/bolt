<?php

$opts = getopt("sl", array("include::", "www::", "bin::", "pear::"));

// include folder
if (isset($opts['include'])) {
    set_include_path(get_include_path().PATH_SEPARATOR.$opts['include']);
}

// dest
$pear = rtrim((isset($opts['pear']) ? rtrim($opts['pear'], '/') : (file_exists("/usr/share/pear") ? "/usr/share/pear" : "/usr/share/php")), '/');
$bin = rtrim((isset($opts['bin']) ? rtrim($opts['bin'], '/') : "/usr/local/bin/"),'/');
$share = rtrim((isset($opts['www']) ? rtrim($opts['www'], '/') : "/var/www/"),'/');
$etc = rtrim((isset($opts['etc']) ? rtrim($opts['etc'], '/') : "/etc/"),'/');

// no version global means this version
// of php is super old
if (!defined('PHP_VERSION')) {
    exit("Your version of PHP is super old. Like really, really, really, really old.\n");
}

// make sure our version is good
if (version_compare(PHP_VERSION, 5.3) === -1) {
    exit("Your version of PHP (".PHP_VERSION.") is not compatable with bolt.php\n");
}

// try to include Archive/Tar.php
if ((include "Archive/Tar.php") === false) {
    exit("You don't seem to have Archive_Tar available in your include_dir. Try installing with `pear install Archive_Tar`\n");
}

// local
if (isset($opts['l'])) {
    $resp = file_get_contents("bolt-latest.tar.gz");
}

// symlink
else if (isset($opts['s'])) {

    // no a location
    if (!file_exists($pear)) {
        exit("Symlink destination '$pear' doesn't exist.\n");
    }

    // loop through source and slinkink everything
    $dir = new RecursiveDirectoryIterator('../src/');
    $it = new RecursiveIteratorIterator($dir);
    $regex = new RegexIterator($it, '/^.+\.php$/i', RecursiveRegexIterator::GET_MATCH);

    // add our files
    foreach ($regex as $file) {

        // get the path
        $path = $pear . str_replace("../src", "", $file[0]);


        // if the file already exists
        // unlink it
        if (file_exists($path)) {
            unlink($path);
        }

        // make sure the base dir exists
        if (!file_exists(dirname($path))) {
            mkdir(dirname($path), 0777, true);
        }

        // symlink the file
        symlink(realpath($file[0]), $path);

    }

    // make etc
    $etc .= '/bolt';
    if (!file_exists($etc)) {
        `mkdir -p $etc`;
    }

    // bin
    $bin .= "/bolt";

    // now symlink the bin file
    if (file_exists($bin)) {
        unlink($bin);
    }
    file_put_contents($bin, stub("./stub/bin.inc", "$pear/bolt.php", $etc)); chmod($bin, 0755);

    // share
    $share .= "/bolt/index.php";

    // now symlink the share file
    if (!file_exists(dirname($share))) {
        mkdir(dirname($share), 0644, true);
    }
    if (file_exists($share)) {
        unlink($share);
    }
    file_put_contents($share, stub("./stub/share.inc", "$pear/bolt.php", $etc));


    // done
    exit("Bolt symlink installed!\n");

}

// get from remote
else {

    // pull down the latest version
    $latest = "https://github.com/traviskuhl/bolt/raw/master/build/bolt-latest.tar.gz";

    // get it
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $latest);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
    $resp = curl_exec($ch);
    curl_close($ch);

}

// nope
if (!$resp) {
    exit("Unable to retrieve the source tar at '$latest'.\n");
}

// write tar to tmp
$tmp = tempnam(sys_get_temp_dir(), 'bolt');
file_put_contents($tmp, $resp);

// open it
$tar = new Archive_Tar($tmp, 'gz');

// get the phar
$phar = $tar->extractInString('bolt.phar');

// place phar in pear
file_put_contents("{$pear}/bolt.phar", $phar);

// make etc
$etc .= '/bolt';
if (!file_exists($etc)) {
    `mkdir -p $etc`;
}

// bin
$bin .= "/bolt";

// now symlink the bin file
if (file_exists($bin)) {
    unlink($bin);
}
file_put_contents($bin, stub("./stub/bin.inc", "$pear/bolt.php", $etc)); chmod($bin, 0755);

// share
$share .= "/bolt/index.php";

// now symlink the share file
if (!file_exists(dirname($share))) {
    mkdir(dirname($share), 0644, true);
}
if (file_exists($share)) {
    unlink($share);
}
file_put_contents($share, stub("./stub/share.inc", "$pear/bolt.php", $etc));


// tell them we're done
exit("bolt has been installed. Enjoy!\n");


/// stub
function stub($file, $phar, $etc) {
    $str = file_get_contents($file);
    return str_replace(array('%PHAR%','%ETC'), array($phar, $etc), $str);
}