<?php

$opts = getopt("sl", array("include::", "www::", "bin::", "pear::"));

// include folder
if (isset($opts['include'])) {
    set_include_path(get_include_path().PATH_SEPARATOR.$opts['include']);
}

// dest
$pear = rtrim((isset($opts['pear']) ? rtrim($opts['pear'], '/') : (file_exists("/usr/share/pear") ? "/usr/share/pear" : "/usr/share/php")), '/');
$bin = rtrim((isset($opts['bin']) ? rtrim($opts['bin'], '/') : "/usr/local/bin/"),'/');
$share = rtrim((isset($opts['www']) ? rtrim($opts['www'], '/') : "/var/www/"),'/');
$etc = rtrim((isset($opts['etc']) ? rtrim($opts['etc'], '/') : "/etc/"),'/');

// no version global means this version
// of php is super old
if (!defined('PHP_VERSION')) {
    exit("Your version of PHP is super old. Like really, really, really, really old.\n");
}

// make sure our version is good
if (version_compare(PHP_VERSION, 5.3) === -1) {
    exit("Your version of PHP (".PHP_VERSION.") is not compatable with bolt.php\n");
}

// try to include Archive/Tar.php
if ((include "Archive/Tar.php") === false) {
    exit("You don't seem to have Archive_Tar available in your include_dir. Try installing with `pear install Archive_Tar`\n");
}

// localx
if (isset($opts['l'])) {
    $resp = file_get_contents("bolt-latest.tar.gz");
}

// symlink
else if (isset($opts['s'])) {

    // bolt
    $bolt = realpath("../src/bolt.php");
    $target = $pear."/bolt.php";

    if (file_exists($target)) {
        unlink($target);
    }

    // phar
    symlink($bolt,$target);

    // make sure
    $dest = "{$share}/bolt/index.php";

    // dir
    if (!file_exists(dirname($dest))) {
        mkdir(dirname($dest));
    }

    // do it
    file_put_contents($dest, stub(file_get_contents("./stub/share.inc"), "bolt.php", ""));

    // done
    exit("bolt has been symliked to '{$bolt}'. Enjoy\n");

}

// get from remote
else {

    // pull down the latest version
    $latest = "https://github.com/traviskuhl/bolt/raw/master/build/latest/bolt-latest.tar.gz";

    // no curl
    if (function_exists('curl_init')) {

        // get it
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $latest);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        $resp = curl_exec($ch);
        curl_close($ch);

    }
    else {
        $resp = trim(`curl -Ls $latest`);
    }

}

// nope
if (!$resp) {
    exit("Unable to retrieve the source tar at '$latest'.\n");
}

// write tar to tmp
$tmp = sys_get_temp_dir().'/bolt'.time();
mkdir($tmp);

file_put_contents($tmp."/tar", $resp);

// open it
$tar = new Archive_Tar($tmp."/tar", 'gz');

// get the phar
$phar = $tar->extractInString('bolt.phar');

// place phar in pear
file_put_contents("{$pear}/bolt.phar", $phar);

// symlink to bolt.phar => bolt.php
if (file_exists("{$pear}/bolt.php")) {
    unlink("{$pear}/bolt.php");
}

symlink("{$pear}/bolt.phar", "{$pear}/bolt.php");


// make etc
$etc .= '/bolt';
if (!file_exists($etc)) {
    `mkdir -p $etc`;
}

// bin
$bin .= "/bolt";

// now symlink the bin file
if (file_exists($bin)) {
    unlink($bin);
}
file_put_contents($bin, stub($tar->extractInString('bin.inc'), "$pear/bolt.php", $etc)); chmod($bin, 0755);

// share
$share .= "/bolt/index.php";

// now symlink the share file
if (!file_exists(dirname($share))) {
    mkdir(dirname($share), 0644, true);
}
if (file_exists($share)) {
    unlink($share);
}
file_put_contents($share, stub($tar->extractInString('share.inc'), "$pear/bolt.phar", $etc));

// delete dir
`rm -r $tmp`;

// tell them we're done
exit("bolt has been installed. Enjoy!\n");


/// stub
function stub($str, $phar, $etc) {
    return str_replace(array('%PHAR%','%ETC'), array($phar, $etc), $str);
}